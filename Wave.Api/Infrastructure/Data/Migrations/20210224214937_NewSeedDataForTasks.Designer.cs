// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wave.Api.Infrastructure.Data;

namespace Wave.Api.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210224214937_NewSeedDataForTasks")]
    partial class NewSeedDataForTasks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Wave.Api.ApplicationCore.TaskItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ClosedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeadlineOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 994, DateTimeKind.Local).AddTicks(5160),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to shop",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(832)
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2740),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to shop",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2753)
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2757),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to home",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2759)
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2761),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to school",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2764)
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2767),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to kindergarten",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2769)
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2776),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to office",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2778)
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2781),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to bed",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2783)
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2788),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to the cinema",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2790)
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2792),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to meeting",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2794)
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2798),
                            OwnerId = 1,
                            Priority = 0,
                            Status = "new",
                            Title = "Go to prison",
                            Type = "task",
                            UpdatedOn = new DateTime(2021, 2, 24, 23, 49, 36, 997, DateTimeKind.Local).AddTicks(2800)
                        });
                });

            modelBuilder.Entity("Wave.Api.ApplicationCore.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImageStored")
                        .HasColumnType("BLOB");

                    b.Property<DateTime?>("LastActiveOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "James",
                            LastName = "Smith",
                            Login = "user2",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "John",
                            LastName = "Johnson",
                            Login = "user3",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Robert",
                            LastName = "Williams",
                            Login = "user4",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Michael",
                            LastName = "Brown",
                            Login = "user5",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "William",
                            LastName = "Jones",
                            Login = "user6",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "David",
                            LastName = "Garcia",
                            Login = "user7",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Richard",
                            LastName = "Miller",
                            Login = "user8",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 8,
                            FirstName = "Joseph",
                            LastName = "Davis",
                            Login = "user9",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 9,
                            FirstName = "Thomas",
                            LastName = "Rodriguez",
                            Login = "user10",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 10,
                            FirstName = "Charles",
                            LastName = "Martinez",
                            Login = "user11",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 11,
                            FirstName = "Patricia",
                            LastName = "Lopez",
                            Login = "user12",
                            Password = "12345678"
                        },
                        new
                        {
                            Id = 12,
                            FirstName = "Jennifer",
                            LastName = "Gonzales",
                            Login = "user13",
                            Password = "12345678"
                        });
                });

            modelBuilder.Entity("Wave.Api.ApplicationCore.TaskItem", b =>
                {
                    b.HasOne("Wave.Api.ApplicationCore.User", "Owner")
                        .WithMany("Tasks")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Wave.Api.ApplicationCore.User", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
